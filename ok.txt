$('.ui.radio.checkbox')
  .checkbox()
;
var niveau = "";
var surnom = "";
var perte = true;
$("#boutonPlay").click(function(){
    perte = false;
    $(".nivoRadio").each(function(index, item){
        if($(item).is(':checked')){niveau = $(item).attr("id");}
    });
    $(".page").each(function(index, item){
        if($(item).hasClass("activeEffet")){
            $(item).removeClass("activeEffet");
        }
    });

});
var canvas = document.getElementById("canvasSnake");
var w = window.innerWidth;
var h = window.innerHeight;
canvas.width = w;
canvas.height = h;
var ctx = canvas.getContext("2d");
var touche = "touche";
document.onkeydown = logKey;
function logKey(e){
    touche = e.code;
    console.log(touche);
}
$.get("json/niveau.json", function(data){
        console.log("snake", data["snake"]);
        console.log("walls", data["walls"]);
        console.log("food", data["food"]);
        console.log("dimensions", data["dimensions"]);
        // Déclaration des constantes et variables nécessaires
        const SNAKE = data["snake"];
        const chemin = data["snake"];
        const snakevrai = [];
        var tailleSnake = data["snake"].length;
        let WALL = data["walls"];
        let FOOD = data["food"];
        var temp = '';
        var tabGlobal = [];
        // 
        if(touche != ""){
            var interval = setInterval(function(){
                if(!perte){
                    switch (touche) {
                        case 'ArrowDown':
                            if(temp != 'ArrowUp'){
                                step(data["dimensions"][0], data["dimensions"][1], 'down');
                                temp = 'ArrowDown';
                            }else{
                                step(data["dimensions"][0], data["dimensions"][1], 'up');
                                temp = 'ArrowUp';

                            }
                            break;
                        case 'ArrowUp':
                            if(temp != 'ArrowDown'){
                                step(data["dimensions"][0], data["dimensions"][1], 'up');
                                temp = 'ArrowUp';
                            }else{
                                step(data["dimensions"][0], data["dimensions"][1], 'down');
                                temp = 'ArrowDown';

                            }
                            break;
                        case 'ArrowLeft':
                            if(temp != 'ArrowRight'){
                                step(data["dimensions"][0], data["dimensions"][1], 'left');
                                temp = 'ArrowLeft';
                            }else{
                                step(data["dimensions"][0], data["dimensions"][1], 'right');
                                temp = 'ArrowRight';
                                
                            }
                            break;
                        case 'ArrowRight':
                            if(temp != 'ArrowLeft'){
                                step(data["dimensions"][0], data["dimensions"][1], 'right');
                                temp = 'ArrowRight';
                            }else{
                                step(data["dimensions"][0], data["dimensions"][1], 'left');
                                temp = 'ArrowLeft';

                            }
                            break;
                        default:
                            break;
                    }
            }
                }, data["delay"]);
        }

    });



 function step(width, height, orientation){
    var vraiY = 0;
    for (let x = 0; x < width; x++) {
        tabGlobal[x] = [];
        for (let y = 0; y < height; y++) {
            tabGlobal[x][y] = "EMPTY";  
        }
    }
    snakevrai.splice(0, tailleSnake);
    move(orientation, snakevrai);
    for (let index = 0; index < snakevrai.length; index++) {
        tabGlobal[snakevrai[index][0]][snakevrai[index][1]] = "SNAKE";
        
    }
    for (let index = 0; index < WALL.length; index++) {
        tabGlobal[WALL[index][0]][WALL[index][1]] = "WALL";
        
    }
    for (let index = 0; index < FOOD.length; index++) {
        tabGlobal[FOOD[index][0]][FOOD[index][1]] = "FOOD";
        
    }
    var tailleS = 0;
    for (let y = 0; y < tabGlobal[0].length; y++) {
        vraiY = h/40*y;
        for (let x = 0; x < tabGlobal.length; x++) {
            
            if(tabGlobal[x][y] == "SNAKE"){
                tailleS++;
                if(tailleS == 0){
                    ctx.fillStyle = "#9b59b6";
                }else{
                    ctx.fillStyle = "#e74c3c";
                }
            }else if(tabGlobal[x][y] == "FOOD"){
                ctx.fillStyle = "#fbc531";
            }else if(tabGlobal[x][y] == "WALL"){
                ctx.fillStyle = "#f5f6fa";
            }else{
                ctx.fillStyle = "#000000";

            }
            ctx.fillRect(w/80*x, vraiY, w/80, h/40);
            
        }

    }
}

 function move(direction, snakevrai){
    var compte = 0;
    var tete = [];
    var taille = chemin.length-1;
    var x = 0;
    var y = 0;
    switch (direction) {
        case "down":
            for (let i = tailleSnake; i >= 0; i--) {
                var element = chemin[taille - i];
                   snakevrai.push(element);
           }
            tete = chemin[chemin.length-1];
            x = tete[0];
            y = tete[1];
            if(rencontre(x,y) == 0){
                perte = true;
                perteFunction();

            }else if(rencontre(x,y) == 1){
                tailleSnake = tailleSnake+6;
            }
            chemin.push([x, y+1]);
            
            break;
        case "up":
            for (let i = tailleSnake; i >= 0; i--) {
                var element = chemin[taille - i];
                   snakevrai.push(element);
           }
           
            tete = chemin[chemin.length-1];
            x = tete[0];
            y = tete[1];
            if(rencontre(x,y) == 0){
                perte = true;
                perteFunction();

            }else if(rencontre(x,y) == 1){
                tailleSnake = tailleSnake+6;
            }
            chemin.push([x, y-1]);
            break;
        case "left":
            for (let i = tailleSnake; i >= 0; i--) {
                var element = chemin[taille - i];
                   snakevrai.push(element);
           }
           
            tete = chemin[chemin.length-1];
            x = tete[0];
            y = tete[1];
            if(rencontre(x,y) == 0){
                perte = true;
                perteFunction();
            }else if(rencontre(x,y) == 1){
                tailleSnake = tailleSnake+6;
            }
            chemin.push([x-1, y]);
            
            break;
        case "right":
            for (let i = tailleSnake; i >= 0; i--) {
                var element = chemin[taille - i];
                   snakevrai.push(element);
           }
            tete = chemin[chemin.length-1];
            x = tete[0];
            y = tete[1];
            if(rencontre(x,y) == 0){
                perte = true;
                perteFunction();

            }else if(rencontre(x,y) == 1){
                tailleSnake = tailleSnake+6;
            }
            chemin.push([x+1, y]);
            
            break;
        default:
            break;
    }
}
function rencontre(x, y){
    for (let i = 0; i < WALL.length; i++) {
        if(WALL[i][0] == x && WALL[i][1] == y){
            return 0;
        }
    }
    for (let k = 0; k < FOOD.length; k++) {
        if(FOOD[k][0] == x && FOOD[k][1] == y){
            FOOD.shift(FOOD[k]);
            return 1;
        }
    }
    if(x<0 || y<0){
        return 0;
    }
    return 2;
}
 function perteFunction(){
    clearInterval(interval);
}
